#!/usr/bin/env bash
#  ██████╗ ███████╗██████╗ ███████╗██╗  ██╗██╗███████╗████████╗
#  ██╔══██╗██╔════╝██╔══██╗██╔════╝██║  ██║██║██╔════╝╚══██╔══╝
#  ██████╔╝█████╗  ██║  ██║███████╗███████║██║█████╗     ██║
#  ██╔══██╗██╔══╝  ██║  ██║╚════██║██╔══██║██║██╔══╝     ██║
#  ██║  ██║███████╗██████╔╝███████║██║  ██║██║██║        ██║
#  ╚═╝  ╚═╝╚══════╝╚═════╝ ╚══════╝╚═╝  ╚═╝╚═╝╚═╝        ╚═╝
#	Script to toogle redshift in my eww widget.
#	gh0stzk | https://github.com/gh0stzk/dotfiles
#	11.07.2024 13:24:18

cache_file=$HOME/.cache/$(whoami)/redshift_state

mkdir -p "$(dirname "$cache_file")"
[[ -f "$cache_file" ]] || echo OFF > "$cache_file"

get_state() {
	cat "$cache_file"
}

disable_redshift() {
	redshift -x >/dev/null 2>&1
	pkill redshift
	echo OFF >"$cache_file"
}

enable_redshift() {
	redshift -x
	echo ON >"$cache_file"
	redshift -l 49.1142:16.3628 #3350

}

# Check if the script is run at startup
if [[ "$1" == "startup" ]]; then
    disable_redshift  # Disable redshift on startup
    exit 0
fi

toggle() {
	if [[ $(get_state) == "ON" ]]; then

		disable_redshift
	else
		enable_redshift

	fi
}


case $1 in
    state) get_state ;;
    toggle) toggle ;;
    enable) enable_redshift ;;  # Enable redshift directly
    disable) disable_redshift ;;  # Disable redshift directly
esac
